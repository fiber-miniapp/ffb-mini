      SUBROUTINE GRAD3X(MCOLOR,MCPART,NCOLOR,NCPART,LLOOP,
     *                  ME,N,N1,NE,NP,NODE,
     *                  S,DNXYZ,CM,
     *                  IPART,NDOM,MBPDOM,LDOM,NBPDOM,IPSLF,IPSND,
     *                  NPFIX,LPFIX,
     *                  NPSYMT,LPSYMT,XPSYMT,YPSYMT,ZPSYMT,
     *                  FXYZ,RX,RY,MWRK,WRKN,
     *                  IUT0,IERR)
#include "timing.h"
      IMPLICIT NONE
C
CCCC  [INPUT:LOOP]
      INTEGER*4 MCOLOR,MCPART
      INTEGER*4 NCOLOR(4),NCPART(MCOLOR,4),LLOOP(MCPART,MCOLOR,4)
C
CCCC  [INPUT]
      INTEGER*4 ME,N,N1,NE,NP,NODE(N1,NE),
     *          IUT0
      REAL*4    S(NE),DNXYZ(3,N1,ME),CM(NP)
C
CCCC  [INPUT:OVERSET NODE DATA]
C
CCC [INPUT:INTER CONNECT NODES]
      INTEGER*4 IPART,NDOM,MBPDOM,
     *          LDOM(NDOM),NBPDOM(NDOM),
     *          IPSLF(MBPDOM,NDOM),IPSND(MBPDOM,NDOM)
C
CCC [INPUT:B.C. NODES]
      INTEGER*4 NPFIX,LPFIX(NPFIX),
     *          NPSYMT,LPSYMT(NPSYMT)
      REAL*4    XPSYMT(NPSYMT),YPSYMT(NPSYMT),ZPSYMT(NPSYMT)
C
CCCC  [INPUT:OVERSET NODES]
C      
C     [IN:MID NODE COLORING]
C
CCCC  [WORK:MID NODES]
C    
CCC [OUTPUT]
      INTEGER*4 IERR
      REAL*4    FXYZ(3,NP)
C
CCC [WORK]    
      REAL*4    RX(0:N,ME),RY(0:N,ME)
      INTEGER*4 MWRK
      REAL*4    WRKN(MWRK,9)
C
CCC [LOCAL]    
      INTEGER*4 ICOLOR,ICPART,IEE,IES,
     *          IP1,IP2,IP3,IP4,IP5,IP6,IP7,IP8,
     *          MAXBUF,IP,IE,IBP
      REAL*4    SWRK,COEF
C
      INTEGER*4 IDIM
      DATA IDIM    / 3 /
C
      CHARACTER*60 ERMSGC
     & /' ## SUBROUTINE GRAD3X: FATAL      ERROR REPORT   ; RETURNED' /
C
C     CAL. GRADIENT OF SCALAR VARIABLE 
C     THIS ROUTINE SUPPORTS OVERSET NODES AND MID NODES.
C 
C     WRITTEN BY Y.YAMADE 2012.07.18
C
C
C     ARGUMENT LISTINGS
C
C (1) INPUT
C INT *4 MLOOP        ; MAX. NUMBER OF COLORS
C INT *4 NLOOP        ; NUMBER OF COLORS
C INT *4 LLOOP(I,4)   ; ADRESS OF COLOR LOOPS
C INT *4 ME           ; MAX. NUMBER OF TOTAL ELEMENTS
C INT *4 N            ; =8
C INT *4 N1           ; THE DIMENSION SIZE OF THE FIRST ELEMENTS OF THE 
C INT *4 NE           ; NUMBER OF ELEMENTS
C INT *4 NP           ; NUMBER OF NODES
C INT *4 NE           ; NUMBER OF ELEMENTS
C INT *4 NP           ; NUMBER OF NODES
C INT *4 NODE   (I,IE); NODE TABLE
C INT *4 IUT0         ; FILE NUMBER TO REPORT ERROR OCCURENCE
C REAL*4 S        (IP); INPUT DATA 
C REAL*4 DNX    (I,IE); INTEGRATED ELEMENT VECTOR OF NX
C REAL*4 DNY    (I,IE); INTEGRATED ELEMENT VECTOR OF NY
C REAL*4 DNZ    (I,IE); INTEGRATED ELEMENT VECTOR OF NZ
C REAL*4 CM       (IP); INVERSED LUMPED MASS MATRIX
C
C === B.C.-[1] ===    ; INTERCONNECT B.C.
C INT *4 IPART        ; SUB-DOMAIN NUMBER THAT THIS TASK SHOULD TAKE/IS
C                       TAKING CARE OF. IPART BEING SET ZERO MEANS THAT
C                       THE PROGRAM SHOULD RUN/IS RUNNING IN SERIAL 
C                       MODE.
C INT *4 NDOM         ; NUMBER OF THE NERIBERING SUB-DOMAINS
C INT*4  MBPDOM       ; THE MAXIMUM NUMBER OF THE INTER-CONNECT 
C                       BOUNDARY NODES FOR ONE NEIBERING SUB-DOMAIN
C INT *4 LDOM   (IDOM); NEIBERING SUB-DOMAIN NUMBER
C INT *4 NBPDOM (IDOM); NUMBER OF INTER-CONNECT BOUNDARY NODES
C                       SHARING WITH THE IDOM'TH NEIBERING SUB-DOMAIN,
C                       LDOM(IDOM)
C INT *4 IPSLF(I,IDOM); INTER-CONNECT BOUNDARY NODE NUMBER IN THE
C                       CALLING TASK'S SUB-DOMAIN, FOR THE IDOM'TH
C                       NEIBERING SUB-DOMAIN, LDOM(IDOM)
C INT *4 IPSND(I,IDOM); INTER-CONNECT BOUNDARY NODE NUMBER IN THE
C                       SUB-DOMAIN THAT IS RECEIVING THE CALLING
C                       TASK'S RESIDUALS.
C
C === B.C.-[2] ===    ; GRADIENT-ZETO B.C.
C INT *4 NPFIX        ; NUMBER OF FIX BOUNDARY NODES
C INT *4 LPFIX    (IB); FIX BOUNDARY NODES
C
C === B.C.-[3] ===    ; SYMMETRIC B.C.
C INT *4 NPSYMT       ; NUMBER OF SYMMETRIC BOUNDARY NODES
C INT *4 LPSYMT   (IB); SYMMETRIC BOUNDARY NODES
C REAL*4 XPSYMT   (IB); X-DIR COMPONENT OF SYMMETRIC NODE NORMAL VECTOR
C REAL*4 YPSYMT   (IB); Y-DIR COMPONENT OF SYMMETRIC NODE NORMAL VECTOR
C REAL*4 ZPSYMT   (IB); Z-DIR COMPONENT OF SYMMETRIC NODE NORMAL VECTOR
C
C === B.C.-[4] ===    ; OVERSET B.C.
C
C === B.C.-[5] ===    ; MID NODES
C INT *4         NPMID;
C INT *4         NGAT ;
C INT *4         NSCT ;
C INT *4 LPMID1  (IBP);
C INT *4 LPMID2  (IBP);
C INT *4 LPMID3  (IBP);
C INT *4 LGAT   (IDOM); 
C INT *4 NPTGAT (IDOM); 
C INT *4 LPMID(I,IDOM); 
C INT *4 LPGAT(I,IDOM); 
C INT *4 LSCT   (IDOM);
C INT *4 NPTSCT (IDOM);
C INT *4 IEMID(I,IDOM);
C INT *4 IPSCT(I,IDOM);
C REAL*4 COMID1  (IBP); LOCAL COORDINATE IN INTERPOLATING ELEMENT
C REAL*4 COMID2  (IBP); LOCAL COORDINATE IN INTERPOLATING ELEMENT
C REAL*4 COMID3  (IBP); LOCAL COORDINATE IN INTERPOLATING ELEMENT
C
C (2) OUTPUT
C REAL*4 FX       (IP); X-COMPONET OF GRADIENT OF S
C REAL*4 FY       (IP); Y-COMPONET OF GRADIENT OF S
C REAL*4 FZ       (IP); Z-COMPONET OF GRADIENT OF S
C INT *4 IERR         ; RETURN CODE TO REPORT ERROR OCCURRENCE
C                   0 --- NORMAL TERMINATION
C                   1 --- A FATAL ERROR HAS OCCURRED
C
C (3) WORK
C REAL*4 RX     (I,IE); WORK REGION PASSED FOR CALLAP
C REAL*4 RY     (I,IE); WORK REGION PASSED FOR CALLAP
C
      IERR=0
      MAXBUF = NE*(N+1)
C
      TIME_START(TM_GRAD3X_OP0)
      DO 1000 IP = 1 , NP
         FXYZ(1,IP)=0.0E0
         FXYZ(2,IP)=0.0E0
         FXYZ(3,IP)=0.0E0
 1000 CONTINUE
      TIME_STOP(TM_GRAD3X_OP0)
C
C
C          OPERATION COUNTS:  48 FLOP /ELEMENT
C          DATA LOADINGS   :  57 WORDS/ELEMENT
C                           (  1 WORDS CONTIGUOUSLY,
C                             32 WORDS BY STRIDE, AND
C                             24 WORDS BY LIST )
C
      TIME_START(TM_GRAD3X_OP1)
      DO 1411 ICOLOR=1,NCOLOR(4)
!ocl norecurrence(FXYZ)
      DO 1410 ICPART=1,NCPART(ICOLOR,4)
          IES=LLOOP(ICPART  ,ICOLOR,4)
          IEE=LLOOP(ICPART+1,ICOLOR,4)-1
!ocl nosimd
!ocl noswp
          DO 1400 IE=IES,IEE
             IP1=NODE(1,IE)
             IP2=NODE(2,IE)
             IP3=NODE(3,IE)
             IP4=NODE(4,IE)
             IP5=NODE(5,IE)
             IP6=NODE(6,IE)
             IP7=NODE(7,IE)
             IP8=NODE(8,IE)
C
             SWRK = S(IE)
C               
             FXYZ(1,IP1)=FXYZ(1,IP1)-SWRK*DNXYZ(1,1,IE)
             FXYZ(2,IP1)=FXYZ(2,IP1)-SWRK*DNXYZ(2,1,IE)
             FXYZ(3,IP1)=FXYZ(3,IP1)-SWRK*DNXYZ(3,1,IE)
C
             FXYZ(1,IP2)=FXYZ(1,IP2)-SWRK*DNXYZ(1,2,IE)
             FXYZ(2,IP2)=FXYZ(2,IP2)-SWRK*DNXYZ(2,2,IE)
             FXYZ(3,IP2)=FXYZ(3,IP2)-SWRK*DNXYZ(3,2,IE)
C
             FXYZ(1,IP3)=FXYZ(1,IP3)-SWRK*DNXYZ(1,3,IE)
             FXYZ(2,IP3)=FXYZ(2,IP3)-SWRK*DNXYZ(2,3,IE)
             FXYZ(3,IP3)=FXYZ(3,IP3)-SWRK*DNXYZ(3,3,IE)
C
             FXYZ(1,IP4)=FXYZ(1,IP4)-SWRK*DNXYZ(1,4,IE)
             FXYZ(2,IP4)=FXYZ(2,IP4)-SWRK*DNXYZ(2,4,IE)
             FXYZ(3,IP4)=FXYZ(3,IP4)-SWRK*DNXYZ(3,4,IE)
C
             FXYZ(1,IP5)=FXYZ(1,IP5)-SWRK*DNXYZ(1,5,IE)
             FXYZ(2,IP5)=FXYZ(2,IP5)-SWRK*DNXYZ(2,5,IE)
             FXYZ(3,IP5)=FXYZ(3,IP5)-SWRK*DNXYZ(3,5,IE)
C
             FXYZ(1,IP6)=FXYZ(1,IP6)-SWRK*DNXYZ(1,6,IE)
             FXYZ(2,IP6)=FXYZ(2,IP6)-SWRK*DNXYZ(2,6,IE)
             FXYZ(3,IP6)=FXYZ(3,IP6)-SWRK*DNXYZ(3,6,IE)
C
             FXYZ(1,IP7)=FXYZ(1,IP7)-SWRK*DNXYZ(1,7,IE)
             FXYZ(2,IP7)=FXYZ(2,IP7)-SWRK*DNXYZ(2,7,IE)
             FXYZ(3,IP7)=FXYZ(3,IP7)-SWRK*DNXYZ(3,7,IE)
C
             FXYZ(1,IP8)=FXYZ(1,IP8)-SWRK*DNXYZ(1,8,IE)
             FXYZ(2,IP8)=FXYZ(2,IP8)-SWRK*DNXYZ(2,8,IE)
             FXYZ(3,IP8)=FXYZ(3,IP8)-SWRK*DNXYZ(3,8,IE)
 1400     CONTINUE
 1410 CONTINUE
 1411 CONTINUE
      TIME_STOP(TM_GRAD3X_OP1)
C
C
      TIME_START(TM_GRAD3X_OP2)
      DO 2010 IP=1,NP
         WRKN(IP,4)=FXYZ(1,IP)
         WRKN(IP,5)=FXYZ(2,IP)
         WRKN(IP,6)=FXYZ(3,IP)
 2010 CONTINUE
      TIME_STOP(TM_GRAD3X_OP2)
C
C
C SUPERIMPOSE NEIBERING ELEMENT CONTRIBUTIONS
C
      TIME_START(TM_GRAD3X_COM)
      CALL DDCOMX(IPART,IDIM,LDOM,NBPDOM,NDOM,IPSLF,IPSND,MBPDOM,
     *            WRKN(1,4),WRKN(1,5),WRKN(1,6),NP,IUT0,IERR,
     *            RX,RY,MAXBUF)
      TIME_STOP(TM_GRAD3X_COM)
      IF(IERR.NE.0) THEN
          WRITE(IUT0,*)
          WRITE(IUT0,*) ERMSGC
          RETURN
      ENDIF
C
      TIME_START(TM_GRAD3X_OP3)
      DO 2020 IP=1,NP
         FXYZ(1,IP)=WRKN(IP,4)
         FXYZ(2,IP)=WRKN(IP,5)
         FXYZ(3,IP)=WRKN(IP,6)
 2020 CONTINUE
C
      DO 2100 IP=1,NP
          FXYZ(1,IP)=FXYZ(1,IP)*CM(IP)
          FXYZ(2,IP)=FXYZ(2,IP)*CM(IP)
          FXYZ(3,IP)=FXYZ(3,IP)*CM(IP)
 2100 CONTINUE
      TIME_STOP(TM_GRAD3X_OP3)
C
C
C
!ocl norecurrence(FXYZ)      
      DO 3000 IBP=1,NPFIX
          IP=LPFIX(IBP)
          FXYZ(1,IP)=0.0E0
          FXYZ(2,IP)=0.0E0
          FXYZ(3,IP)=0.0E0
 3000 CONTINUE   
C
!ocl norecurrence(FXYZ)      
      DO 3100 IBP = 1 , NPSYMT
            COEF= XPSYMT(IBP)*FXYZ(1,LPSYMT(IBP))
     *           +YPSYMT(IBP)*FXYZ(2,LPSYMT(IBP))
     *           +ZPSYMT(IBP)*FXYZ(3,LPSYMT(IBP))
            FXYZ(1,LPSYMT(IBP)) = FXYZ(1,LPSYMT(IBP))-COEF*XPSYMT(IBP)
            FXYZ(2,LPSYMT(IBP)) = FXYZ(2,LPSYMT(IBP))-COEF*YPSYMT(IBP)
            FXYZ(3,LPSYMT(IBP)) = FXYZ(3,LPSYMT(IBP))-COEF*ZPSYMT(IBP)
 3100 CONTINUE
C
C     
C
      RETURN
      END
