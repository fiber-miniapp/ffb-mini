      SUBROUTINE CALLAP(MCOLOR,MCPART,NCOLOR,NCPART,LLOOP,
     *                  ME,N,N1,NE,NP,NEX,NODE,
     *                  S,AS,DNXYZ,DNXI,DNYI,DNZI,
     *                  CM,
     *                  IPART,NDOM,MBPDOM,LDOM,NBPDOM,IPSLF,IPSND,
     *                  NPFIX,LPFIX,
     *                  NPSYMT,LPSYMT,XPSYMT,YPSYMT,ZPSYMT,
     *                  FXYZ,RX,RY,MWRK,WRKN,
     *                  IUT0,IERR)
#include "timing.h"
      IMPLICIT NONE
C
CCCC  [INPUT:LOOP]
      INTEGER*4 MCOLOR,MCPART
      INTEGER*4 NCOLOR(4),NCPART(MCOLOR,4),LLOOP(MCPART,MCOLOR,4)
C
CCCC  [INPUT]
      INTEGER*4 ME,N,N1,NE,NP,NEX(8),NODE(N1,NE),
     *          IUT0
      REAL*4    S(NE),AS(NE),DNXYZ(3,N1,ME),
     *          DNXI(N1,ME),DNYI(N1,ME),DNZI(N1,ME),CM(NP)
C
CCCC  [INPUT:OVERSET NODE DATA]
C
CCC [INPUT:INTER CONNECT NODES]
      INTEGER*4 IPART,NDOM,MBPDOM,
     *          LDOM(NDOM),NBPDOM(NDOM),
     *          IPSLF(MBPDOM,NDOM),IPSND(MBPDOM,NDOM)
C
CCC [INPUT:B.C. NODES]
      INTEGER*4 NPFIX,LPFIX(NPFIX),
     *          NPSYMT,LPSYMT(NPSYMT)
      REAL*4    XPSYMT(NPSYMT),YPSYMT(NPSYMT),ZPSYMT(NPSYMT)
C
CCCC  [INPUT:OVERSET NODES]
C      
C     [IN:MID NODE COLORING]
C
CCCC  [WORK:MID NODES]
C    
CCC [OUTPUT]
      INTEGER*4 IERR
      REAL*4    FXYZ(3,NP)
C
CCC [WORK]    
      REAL*4    RX(0:N,ME),RY(0:N,ME)
      INTEGER*4 MWRK
      REAL*4    WRKN(MWRK,9)
C
CCC [LOCAL]    
      INTEGER*4 IMODE
      DATA IMODE   / 1 /
C
      CHARACTER*60 ERMSGC
     & /' ## SUBROUTINE CALLAP: FATAL      ERROR REPORT   ; RETURNED' /
C
C
C     CAL. LAPLASIAN (DIVERGENCE OF GRADIENT) 
C     OF VARIABLE DEFINED AT ELEMENTS 
C 
C     WRITTEN BY Y.YAMADE 2012.07.18
C
C
C     ARGUMENT LISTINGS
C
C (1) INPUT
C INT *4 MLOOP        ; MAX. NUMBER OF COLORS
C INT *4 NLOOP        ; NUMBER OF COLORS
C INT *4 LLOOP(I,4)   ; ADRESS OF COLOR LOOPS
C INT *4 ME           ; MAX. NUMBER OF TOTAL ELEMENTS
C INT *4 N            ; =8
C INT *4 N1           ; THE DIMENSION SIZE OF THE FIRST ELEMENTS OF THE 
C INT *4 NE           ; NUMBER OF ELEMENTS
C INT *4 NP           ; NUMBER OF NODES
C INT *4 NEX       (I); INCLUDES NUMBER OF ELEMENTS AND NUMBER OF LOCAL NODES
C INT *4 NE           ; NUMBER OF ELEMENTS
C INT *4 NP           ; NUMBER OF NODES
C INT *4 NODE   (I,IE); NODE TABLE
C INT *4 IUT0         ; FILE NUMBER TO REPORT ERROR OCCURENCE
C REAL*4 S        (IP); INPUT DATA 
C REAL*4 DNX    (I,IE); INTEGRATED ELEMENT VECTOR OF NX
C REAL*4 DNY    (I,IE); INTEGRATED ELEMENT VECTOR OF NY
C REAL*4 DNZ    (I,IE); INTEGRATED ELEMENT VECTOR OF NZ
C REAL*4 DNXI   (I,IE); ELEMENT CENTER VALUE OF NX
C REAL*4 DNYI   (I,IE); ELEMENT CENTER VALUE OF NY
C REAL*4 DNZI   (I,IE); ELEMENT CENTER VALUE OF NZ
C REAL*4 CM       (IP); INVERSED LUMPED MASS MATRIX
C
C === B.C.-[1] ===    ; INTERCONNECT B.C.
C INT *4 IPART        ; SUB-DOMAIN NUMBER THAT THIS TASK SHOULD TAKE/IS
C                       TAKING CARE OF. IPART BEING SET ZERO MEANS THAT
C                       THE PROGRAM SHOULD RUN/IS RUNNING IN SERIAL 
C                       MODE.
C INT *4 NDOM         ; NUMBER OF THE NERIBERING SUB-DOMAINS
C INT*4  MBPDOM       ; THE MAXIMUM NUMBER OF THE INTER-CONNECT 
C                       BOUNDARY NODES FOR ONE NEIBERING SUB-DOMAIN
C INT *4 LDOM   (IDOM); NEIBERING SUB-DOMAIN NUMBER
C INT *4 NBPDOM (IDOM); NUMBER OF INTER-CONNECT BOUNDARY NODES
C                       SHARING WITH THE IDOM'TH NEIBERING SUB-DOMAIN,
C                       LDOM(IDOM)
C INT *4 IPSLF(I,IDOM); INTER-CONNECT BOUNDARY NODE NUMBER IN THE
C                       CALLING TASK'S SUB-DOMAIN, FOR THE IDOM'TH
C                       NEIBERING SUB-DOMAIN, LDOM(IDOM)
C INT *4 IPSND(I,IDOM); INTER-CONNECT BOUNDARY NODE NUMBER IN THE
C                       SUB-DOMAIN THAT IS RECEIVING THE CALLING
C                       TASK'S RESIDUALS.
C
C === B.C.-[2] ===    ; GRADIENT-ZETO B.C.
C INT *4 NPFIX        ; NUMBER OF FIX BOUNDARY NODES
C INT *4 LPFIX    (IB); FIX BOUNDARY NODES
C
C === B.C.-[3] ===    ; SYMMETRIC B.C.
C INT *4 NPSYMT       ; NUMBER OF SYMMETRIC BOUNDARY NODES
C INT *4 LPSYMT   (IB); SYMMETRIC BOUNDARY NODES
C REAL*4 XPSYMT   (IB); X-DIR COMPONENT OF SYMMETRIC NODE NORMAL VECTOR
C REAL*4 YPSYMT   (IB); Y-DIR COMPONENT OF SYMMETRIC NODE NORMAL VECTOR
C REAL*4 ZPSYMT   (IB); Z-DIR COMPONENT OF SYMMETRIC NODE NORMAL VECTOR
C
C === B.C.-[4] ===    ; OVERSET B.C.
C
C === B.C.-[5] ===    ; MID NODES
C INT *4         NPMID;
C INT *4         NGAT ;
C INT *4         NSCT ;
C INT *4 LPMID1  (IBP);
C INT *4 LPMID2  (IBP);
C INT *4 LPMID3  (IBP);
C INT *4 LGAT   (IDOM); 
C INT *4 NPTGAT (IDOM); 
C INT *4 LPMID(I,IDOM); 
C INT *4 LPGAT(I,IDOM); 
C INT *4 LSCT   (IDOM);
C INT *4 NPTSCT (IDOM);
C INT *4 IEMID(I,IDOM);
C INT *4 IPSCT(I,IDOM);
C REAL*4 COMID1  (IBP); LOCAL COORDINATE IN INTERPOLATING ELEMENT
C REAL*4 COMID2  (IBP); LOCAL COORDINATE IN INTERPOLATING ELEMENT
C REAL*4 COMID3  (IBP); LOCAL COORDINATE IN INTERPOLATING ELEMENT
C
C (2) OUTPUT
C REAL*4 SA       (IP); LAPLASIAN OF S
C INT *4 IERR         ; RETURN CODE TO REPORT ERROR OCCURRENCE
C                   0 --- NORMAL TERMINATION
C                   1 --- A FATAL ERROR HAS OCCURRED
C
C (3) WORK
C REAL*4 FX       (IP); X-COMPONET OF GRADIENT OF S
C REAL*4 FY       (IP); Y-COMPONET OF GRADIENT OF S
C REAL*4 FZ       (IP); Z-COMPONET OF GRADIENT OF S
C REAL*4 RX     (I,IE); WORK REGION PASSED FOR CALLAP
C REAL*4 RY     (I,IE); WORK REGION PASSED FOR CALLAP
C
C
      IERR=0
C
      TIME_START(TM_GRAD3X)
      CALL GRAD3X(MCOLOR,MCPART,NCOLOR,NCPART,LLOOP,
     *            ME,N,N1,NE,NP,NODE,
     *            S,DNXYZ,CM,
     *            IPART,NDOM,MBPDOM,LDOM,NBPDOM,IPSLF,IPSND,
     *            NPFIX,LPFIX,
     *            NPSYMT,LPSYMT,XPSYMT,YPSYMT,ZPSYMT,
     *            FXYZ,RX,RY,MWRK,WRKN,
     *            IUT0,IERR)
      TIME_STOP(TM_GRAD3X)
C
C
C    COMPUTE DIV(U) AT ELEMENTS   
C
C          OPERATION COUNTS:   26 FLOP /ELEMENT
C          DATA LOADINGS   :   40 WORDS/ELEMENT
C                           (  16  WORDS CONTIGUOUSLY,
C                              12 WORDS BY STRIDE, AND
C                              12 WORDS BY LIST )
C
      TIME_START(TM_FLD3X2)
      CALL FLD3X2(IMODE,ME,NE,NP,NEX,N1,FXYZ,
     &            AS,NODE,DNXI,DNYI,DNZI,IUT0,IERR)
      TIME_STOP(TM_FLD3X2)
C
      RETURN
      END
